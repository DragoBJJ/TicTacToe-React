{"version":3,"sources":["components/Square.js","components/GameBoard.js","components/App.js","index.js"],"names":["Square","props","activeClass","isWinner","className","onClick","value","GameBoard","squares","map","square","index","i","includes","renderAllSquare","App","state","history","Array","fill","xIsNext","nextStep","handleStatus","slice","checkWinner","setState","concat","length","changeStep","winCombinations","a","b","c","winner","line","nextPlayer","this","current","result","historyofMovements","step","move","react","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAceA,EAZA,SAAAC,GACb,IAAMC,EAAcD,EAAME,SAAW,SAAW,KAEhD,OACE,mCACE,wBAAQC,UAAS,iBAAYF,GAAeG,QAASJ,EAAMI,QAA3D,SACGJ,EAAMK,WCgBAC,EArBG,SAAAN,GAkBhB,OAAO,qBAAKG,UAAU,aAAf,SANiB,WACtB,IAAII,EAAUP,EAAMO,QACpB,OAAkBA,EAAQC,KAAI,SAACC,EAAQC,GACrC,OAdiBC,EAcGD,EAZpB,cAAC,EAAD,CAEEL,MAAOL,EAAMO,QAAQI,GACrBP,QAAS,kBAAMJ,EAAMI,QAAQO,IAC7BT,SAAUF,EAAME,SAASU,SAASD,IAH7BA,GAHU,IAAAA,KAiBeE,MCmFvBC,G,kNAnGbC,MAAQ,CACNC,QAAS,CAAC,CAAET,QAASU,MAAM,GAAGC,KAAK,QACnCC,SAAS,EACTC,SAAU,G,EAGZC,aAAe,SAAAV,GAAM,IAAD,EACU,EAAKI,MAA3BC,EADY,EACZA,QAASI,EADG,EACHA,SAITb,GAHNS,EAAUA,EAAQM,MAAM,EAAGF,EAAW,IAEdA,GACAb,QAAQe,QAC5Bf,EAAQI,IAAM,EAAKY,YAAYhB,KACnCA,EAAQI,GAAK,EAAKI,MAAMI,QAAU,IAAM,IACxC,EAAKK,SAAS,CACZR,QAASA,EAAQS,OAAO,CAAElB,YAC1BY,SAAU,EAAKJ,MAAMI,QACrBC,SAAUJ,EAAQU,W,EAItBC,WAAa,SAAAjB,GACX,EAAKc,SAAS,CACZJ,SAAUV,EACVS,QAAST,EAAQ,IAAM,K,EAI3Ba,YAAc,SAAAhB,GACZ,IAAMqB,EAAkB,CACtB,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAGT,IAAK,IAAMlB,KAASkB,EAAiB,CAAC,IAAD,cACjBA,EAAgBlB,GADC,GAC5BmB,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAGnC,GACExB,EAAQsB,IACRtB,EAAQsB,KAAOtB,EAAQuB,IACvBvB,EAAQsB,KAAOtB,EAAQwB,GAEvB,MAAO,CAAEC,OAAQzB,EAAQsB,GAAII,KAAML,EAAgBlB,IAIvD,OAAO,M,uDAGC,IAIJwB,EAJG,SACuBC,KAAKpB,MAA3BC,EADD,EACCA,QACFoB,EAAUpB,EAFT,EACUI,UAEXiB,EAASF,KAAKZ,YAAYa,EAAQ7B,SAGtC2B,EADEG,EACQ,oBAAgBA,EAAOL,QACvBI,EAAQ7B,QAAQK,SAAS,MAGzB,yBAAqBuB,KAAKpB,MAAMI,QAAU,IAAM,KAFhD,QAKZ,IAAMmB,EAAqBtB,EAAQR,KAAI,SAAC+B,EAAM7B,GAC5C,IAAMT,EAAcS,IAAU,EAAKK,MAAMK,SAAW,SAAW,GACzDoB,EAAO9B,EAAK,gBAAYA,GAAU,aACxC,OACE,6BACE,wBACEP,UAAWF,EACXG,QAAS,kBAAM,EAAKuB,WAAWjB,IAFjC,SAIG8B,KALI9B,MAWb,OACE,sBAAKP,UAAU,OAAf,UACE,cAAC,EAAD,CACEI,QAAS6B,EAAQ7B,QACjBH,QAAS,SAAAO,GAAC,OAAI,EAAKU,aAAaV,IAChCT,SAAUmC,EAASA,EAAOJ,KAAO,KAEnC,sBAAK9B,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAyB+B,IACzB,6BAAKI,c,GA7FGG,IAAMC,YCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4a495cc3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = props => {\n  const activeClass = props.isWinner ? \"active\" : null;\n\n  return (\n    <>\n      <button className={`square ${activeClass}`} onClick={props.onClick}>\n        {props.value}\n      </button>\n    </>\n  );\n};\n\nexport default Square;\n","import React from \"react\";\nimport Square from \"./Square\";\n\nconst GameBoard = props => {\n  const renderSquare = i => {\n    return (\n      <Square\n        key={i}\n        value={props.squares[i]}\n        onClick={() => props.onClick(i)}\n        isWinner={props.isWinner.includes(i)}\n      />\n    );\n  };\n\n  const renderAllSquare = () => {\n    let squares = props.squares;\n    return (squares = squares.map((square, index) => {\n      return renderSquare(index);\n    }));\n  };\n  return <div className=\"game-board\">{renderAllSquare()}</div>;\n};\n\nexport default GameBoard;\n","import react from \"react\";\nimport GameBoard from \"./GameBoard\";\nimport \"../style/App.css\";\n\nclass App extends react.Component {\n  state = {\n    history: [{ squares: Array(9).fill(null) }],\n    xIsNext: true,\n    nextStep: 0\n  };\n\n  handleStatus = i => {\n    let { history, nextStep } = this.state;\n    history = history.slice(0, nextStep + 1);\n\n    const current = history[nextStep];\n    const squares = current.squares.slice();\n    if (squares[i] || this.checkWinner(squares)) return;\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat({ squares }),\n      xIsNext: !this.state.xIsNext,\n      nextStep: history.length\n    });\n  };\n\n  changeStep = index => {\n    this.setState({\n      nextStep: index,\n      xIsNext: index % 2 === 0\n    });\n  };\n\n  checkWinner = squares => {\n    const winCombinations = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ];\n\n    for (const index in winCombinations) {\n      const [a, b, c] = winCombinations[index];\n\n      if (\n        squares[a] &&\n        squares[a] === squares[b] &&\n        squares[a] === squares[c]\n      ) {\n        return { winner: squares[a], line: winCombinations[index] };\n      }\n    }\n\n    return null;\n  };\n\n  render() {\n    const { history, nextStep } = this.state;\n    const current = history[nextStep];\n    const result = this.checkWinner(current.squares);\n    let nextPlayer;\n    if (result) {\n      nextPlayer = `Winner is ${result.winner}`;\n    } else if (!current.squares.includes(null)) {\n      nextPlayer = `Remis`;\n    } else {\n      nextPlayer = `Next player is:${this.state.xIsNext ? \"X\" : \"O\"}`;\n    }\n\n    const historyofMovements = history.map((step, index) => {\n      const activeClass = index === this.state.nextStep ? \"active\" : \"\";\n      const move = index ? `step #${index}` : \"start game\";\n      return (\n        <li key={index}>\n          <button\n            className={activeClass}\n            onClick={() => this.changeStep(index)}\n          >\n            {move}\n          </button>\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"game\">\n        <GameBoard\n          squares={current.squares}\n          onClick={i => this.handleStatus(i)}\n          isWinner={result ? result.line : []}\n        />\n        <div className=\"game-info\">\n          <div className=\"status\">{nextPlayer}</div>\n          <ul>{historyofMovements}</ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}